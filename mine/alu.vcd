$date
	Sun Nov 11 20:16:08 2018
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module alu_tb $end
$var wire 16 ! sum [15:0] $end
$var wire 4 " op [3:0] $end
$var wire 16 # bb [15:0] $end
$var wire 16 $ aa [15:0] $end
$var integer 32 % k [31:0] $end
$scope module the_circuit $end
$var wire 3 & opcode [2:0] $end
$var wire 16 ' x [15:0] $end
$var wire 16 ( y [15:0] $end
$var wire 16 ) subres2 [15:0] $end
$var wire 16 * subres [15:0] $end
$var wire 16 + s [15:0] $end
$var wire 16 , orres2 [15:0] $end
$var wire 16 - orres [15:0] $end
$var wire 1 . cout $end
$var wire 16 / andres2 [15:0] $end
$var wire 16 0 andres [15:0] $end
$var wire 16 1 addres2 [15:0] $end
$var wire 16 2 addres [15:0] $end
$scope module addition $end
$var wire 1 3 cin $end
$var wire 16 4 x [15:0] $end
$var wire 16 5 y [15:0] $end
$var wire 16 6 s [15:0] $end
$var wire 1 . cout $end
$scope module f0 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 3 c $end
$var wire 1 9 cout $end
$var wire 1 : s $end
$var wire 1 ; w1 $end
$var wire 1 < w2 $end
$var wire 1 = w3 $end
$var wire 1 > w4 $end
$upscope $end
$scope module f1 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 9 c $end
$var wire 1 A cout $end
$var wire 1 B s $end
$var wire 1 C w1 $end
$var wire 1 D w2 $end
$var wire 1 E w3 $end
$var wire 1 F w4 $end
$upscope $end
$scope module f10 $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I cout $end
$var wire 1 J s $end
$var wire 1 K w1 $end
$var wire 1 L w2 $end
$var wire 1 M w3 $end
$var wire 1 N w4 $end
$var wire 1 O c $end
$upscope $end
$scope module f11 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 I c $end
$var wire 1 R cout $end
$var wire 1 S s $end
$var wire 1 T w1 $end
$var wire 1 U w2 $end
$var wire 1 V w3 $end
$var wire 1 W w4 $end
$upscope $end
$scope module f12 $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z c $end
$var wire 1 Z cout $end
$var wire 1 [ s $end
$var wire 1 \ w1 $end
$var wire 1 ] w2 $end
$var wire 1 ^ w3 $end
$var wire 1 _ w4 $end
$upscope $end
$scope module f13 $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 b c $end
$var wire 1 b cout $end
$var wire 1 c s $end
$var wire 1 d w1 $end
$var wire 1 e w2 $end
$var wire 1 f w3 $end
$var wire 1 g w4 $end
$upscope $end
$scope module f14 $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 j c $end
$var wire 1 j cout $end
$var wire 1 k s $end
$var wire 1 l w1 $end
$var wire 1 m w2 $end
$var wire 1 n w3 $end
$var wire 1 o w4 $end
$upscope $end
$scope module f15 $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r c $end
$var wire 1 . cout $end
$var wire 1 s s $end
$var wire 1 t w1 $end
$var wire 1 u w2 $end
$var wire 1 v w3 $end
$var wire 1 w w4 $end
$upscope $end
$scope module f2 $end
$var wire 1 x a $end
$var wire 1 y b $end
$var wire 1 A c $end
$var wire 1 z cout $end
$var wire 1 { s $end
$var wire 1 | w1 $end
$var wire 1 } w2 $end
$var wire 1 ~ w3 $end
$var wire 1 !" w4 $end
$upscope $end
$scope module f3 $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 z c $end
$var wire 1 $" cout $end
$var wire 1 %" s $end
$var wire 1 &" w1 $end
$var wire 1 '" w2 $end
$var wire 1 (" w3 $end
$var wire 1 )" w4 $end
$upscope $end
$scope module f4 $end
$var wire 1 *" a $end
$var wire 1 +" b $end
$var wire 1 $" c $end
$var wire 1 ," cout $end
$var wire 1 -" s $end
$var wire 1 ." w1 $end
$var wire 1 /" w2 $end
$var wire 1 0" w3 $end
$var wire 1 1" w4 $end
$upscope $end
$scope module f5 $end
$var wire 1 2" a $end
$var wire 1 3" b $end
$var wire 1 ," c $end
$var wire 1 4" cout $end
$var wire 1 5" s $end
$var wire 1 6" w1 $end
$var wire 1 7" w2 $end
$var wire 1 8" w3 $end
$var wire 1 9" w4 $end
$upscope $end
$scope module f6 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 4" c $end
$var wire 1 <" cout $end
$var wire 1 =" s $end
$var wire 1 >" w1 $end
$var wire 1 ?" w2 $end
$var wire 1 @" w3 $end
$var wire 1 A" w4 $end
$upscope $end
$scope module f7 $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 <" c $end
$var wire 1 D" cout $end
$var wire 1 E" s $end
$var wire 1 F" w1 $end
$var wire 1 G" w2 $end
$var wire 1 H" w3 $end
$var wire 1 I" w4 $end
$upscope $end
$scope module f8 $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 D" c $end
$var wire 1 L" cout $end
$var wire 1 M" s $end
$var wire 1 N" w1 $end
$var wire 1 O" w2 $end
$var wire 1 P" w3 $end
$var wire 1 Q" w4 $end
$upscope $end
$scope module f9 $end
$var wire 1 R" a $end
$var wire 1 S" b $end
$var wire 1 L" c $end
$var wire 1 O cout $end
$var wire 1 T" s $end
$var wire 1 U" w1 $end
$var wire 1 V" w2 $end
$var wire 1 W" w3 $end
$var wire 1 X" w4 $end
$upscope $end
$upscope $end
$scope module addmux $end
$var wire 16 Y" funcitonin [15:0] $end
$var wire 1 Z" op0 $end
$var wire 1 [" op1 $end
$var wire 1 \" op2 $end
$var wire 16 ]" soutput [15:0] $end
$upscope $end
$scope module and0 $end
$var wire 3 ^" opcode [2:0] $end
$var wire 16 _" x [15:0] $end
$var wire 16 `" y [15:0] $end
$var wire 16 a" s [15:0] $end
$upscope $end
$scope module andmux $end
$var wire 16 b" funcitonin [15:0] $end
$var wire 1 c" op0 $end
$var wire 1 d" op1 $end
$var wire 1 e" op2 $end
$var wire 16 f" soutput [15:0] $end
$upscope $end
$scope module fulladd $end
$var wire 16 g" cin [15:0] $end
$var wire 16 h" x [15:0] $end
$var wire 16 i" y [15:0] $end
$var wire 16 j" yneg [15:0] $end
$var wire 16 k" ycomp [15:0] $end
$var wire 16 l" s [15:0] $end
$var wire 1 m" cout $end
$var wire 16 n" c [15:0] $end
$var integer 32 o" zero [31:0] $end
$scope module fulladd $end
$var wire 1 p" cin $end
$var wire 16 q" x [15:0] $end
$var wire 16 r" y [15:0] $end
$var wire 16 s" s [15:0] $end
$var wire 1 t" cout $end
$scope module f0 $end
$var wire 1 u" a $end
$var wire 1 v" b $end
$var wire 1 p" c $end
$var wire 1 w" cout $end
$var wire 1 x" s $end
$var wire 1 y" w1 $end
$var wire 1 z" w2 $end
$var wire 1 {" w3 $end
$var wire 1 |" w4 $end
$upscope $end
$scope module f1 $end
$var wire 1 }" a $end
$var wire 1 ~" b $end
$var wire 1 w" c $end
$var wire 1 !# cout $end
$var wire 1 "# s $end
$var wire 1 ## w1 $end
$var wire 1 $# w2 $end
$var wire 1 %# w3 $end
$var wire 1 &# w4 $end
$upscope $end
$scope module f10 $end
$var wire 1 '# a $end
$var wire 1 (# b $end
$var wire 1 )# cout $end
$var wire 1 *# s $end
$var wire 1 +# w1 $end
$var wire 1 ,# w2 $end
$var wire 1 -# w3 $end
$var wire 1 .# w4 $end
$var wire 1 /# c $end
$upscope $end
$scope module f11 $end
$var wire 1 0# a $end
$var wire 1 1# b $end
$var wire 1 )# c $end
$var wire 1 2# cout $end
$var wire 1 3# s $end
$var wire 1 4# w1 $end
$var wire 1 5# w2 $end
$var wire 1 6# w3 $end
$var wire 1 7# w4 $end
$upscope $end
$scope module f12 $end
$var wire 1 8# a $end
$var wire 1 9# b $end
$var wire 1 :# c $end
$var wire 1 :# cout $end
$var wire 1 ;# s $end
$var wire 1 <# w1 $end
$var wire 1 =# w2 $end
$var wire 1 ># w3 $end
$var wire 1 ?# w4 $end
$upscope $end
$scope module f13 $end
$var wire 1 @# a $end
$var wire 1 A# b $end
$var wire 1 B# c $end
$var wire 1 B# cout $end
$var wire 1 C# s $end
$var wire 1 D# w1 $end
$var wire 1 E# w2 $end
$var wire 1 F# w3 $end
$var wire 1 G# w4 $end
$upscope $end
$scope module f14 $end
$var wire 1 H# a $end
$var wire 1 I# b $end
$var wire 1 J# c $end
$var wire 1 J# cout $end
$var wire 1 K# s $end
$var wire 1 L# w1 $end
$var wire 1 M# w2 $end
$var wire 1 N# w3 $end
$var wire 1 O# w4 $end
$upscope $end
$scope module f15 $end
$var wire 1 P# a $end
$var wire 1 Q# b $end
$var wire 1 R# c $end
$var wire 1 t" cout $end
$var wire 1 S# s $end
$var wire 1 T# w1 $end
$var wire 1 U# w2 $end
$var wire 1 V# w3 $end
$var wire 1 W# w4 $end
$upscope $end
$scope module f2 $end
$var wire 1 X# a $end
$var wire 1 Y# b $end
$var wire 1 !# c $end
$var wire 1 Z# cout $end
$var wire 1 [# s $end
$var wire 1 \# w1 $end
$var wire 1 ]# w2 $end
$var wire 1 ^# w3 $end
$var wire 1 _# w4 $end
$upscope $end
$scope module f3 $end
$var wire 1 `# a $end
$var wire 1 a# b $end
$var wire 1 Z# c $end
$var wire 1 b# cout $end
$var wire 1 c# s $end
$var wire 1 d# w1 $end
$var wire 1 e# w2 $end
$var wire 1 f# w3 $end
$var wire 1 g# w4 $end
$upscope $end
$scope module f4 $end
$var wire 1 h# a $end
$var wire 1 i# b $end
$var wire 1 b# c $end
$var wire 1 j# cout $end
$var wire 1 k# s $end
$var wire 1 l# w1 $end
$var wire 1 m# w2 $end
$var wire 1 n# w3 $end
$var wire 1 o# w4 $end
$upscope $end
$scope module f5 $end
$var wire 1 p# a $end
$var wire 1 q# b $end
$var wire 1 j# c $end
$var wire 1 r# cout $end
$var wire 1 s# s $end
$var wire 1 t# w1 $end
$var wire 1 u# w2 $end
$var wire 1 v# w3 $end
$var wire 1 w# w4 $end
$upscope $end
$scope module f6 $end
$var wire 1 x# a $end
$var wire 1 y# b $end
$var wire 1 r# c $end
$var wire 1 z# cout $end
$var wire 1 {# s $end
$var wire 1 |# w1 $end
$var wire 1 }# w2 $end
$var wire 1 ~# w3 $end
$var wire 1 !$ w4 $end
$upscope $end
$scope module f7 $end
$var wire 1 "$ a $end
$var wire 1 #$ b $end
$var wire 1 z# c $end
$var wire 1 $$ cout $end
$var wire 1 %$ s $end
$var wire 1 &$ w1 $end
$var wire 1 '$ w2 $end
$var wire 1 ($ w3 $end
$var wire 1 )$ w4 $end
$upscope $end
$scope module f8 $end
$var wire 1 *$ a $end
$var wire 1 +$ b $end
$var wire 1 $$ c $end
$var wire 1 ,$ cout $end
$var wire 1 -$ s $end
$var wire 1 .$ w1 $end
$var wire 1 /$ w2 $end
$var wire 1 0$ w3 $end
$var wire 1 1$ w4 $end
$upscope $end
$scope module f9 $end
$var wire 1 2$ a $end
$var wire 1 3$ b $end
$var wire 1 ,$ c $end
$var wire 1 /# cout $end
$var wire 1 4$ s $end
$var wire 1 5$ w1 $end
$var wire 1 6$ w2 $end
$var wire 1 7$ w3 $end
$var wire 1 8$ w4 $end
$upscope $end
$upscope $end
$scope module fulladd2 $end
$var wire 1 9$ cin $end
$var wire 16 :$ x [15:0] $end
$var wire 16 ;$ y [15:0] $end
$var wire 16 <$ s [15:0] $end
$var wire 1 m" cout $end
$scope module f0 $end
$var wire 1 =$ a $end
$var wire 1 >$ b $end
$var wire 1 9$ c $end
$var wire 1 ?$ cout $end
$var wire 1 @$ s $end
$var wire 1 A$ w1 $end
$var wire 1 B$ w2 $end
$var wire 1 C$ w3 $end
$var wire 1 D$ w4 $end
$upscope $end
$scope module f1 $end
$var wire 1 E$ a $end
$var wire 1 F$ b $end
$var wire 1 ?$ c $end
$var wire 1 G$ cout $end
$var wire 1 H$ s $end
$var wire 1 I$ w1 $end
$var wire 1 J$ w2 $end
$var wire 1 K$ w3 $end
$var wire 1 L$ w4 $end
$upscope $end
$scope module f10 $end
$var wire 1 M$ a $end
$var wire 1 N$ b $end
$var wire 1 O$ cout $end
$var wire 1 P$ s $end
$var wire 1 Q$ w1 $end
$var wire 1 R$ w2 $end
$var wire 1 S$ w3 $end
$var wire 1 T$ w4 $end
$var wire 1 U$ c $end
$upscope $end
$scope module f11 $end
$var wire 1 V$ a $end
$var wire 1 W$ b $end
$var wire 1 O$ c $end
$var wire 1 X$ cout $end
$var wire 1 Y$ s $end
$var wire 1 Z$ w1 $end
$var wire 1 [$ w2 $end
$var wire 1 \$ w3 $end
$var wire 1 ]$ w4 $end
$upscope $end
$scope module f12 $end
$var wire 1 ^$ a $end
$var wire 1 _$ b $end
$var wire 1 `$ c $end
$var wire 1 `$ cout $end
$var wire 1 a$ s $end
$var wire 1 b$ w1 $end
$var wire 1 c$ w2 $end
$var wire 1 d$ w3 $end
$var wire 1 e$ w4 $end
$upscope $end
$scope module f13 $end
$var wire 1 f$ a $end
$var wire 1 g$ b $end
$var wire 1 h$ c $end
$var wire 1 h$ cout $end
$var wire 1 i$ s $end
$var wire 1 j$ w1 $end
$var wire 1 k$ w2 $end
$var wire 1 l$ w3 $end
$var wire 1 m$ w4 $end
$upscope $end
$scope module f14 $end
$var wire 1 n$ a $end
$var wire 1 o$ b $end
$var wire 1 p$ c $end
$var wire 1 p$ cout $end
$var wire 1 q$ s $end
$var wire 1 r$ w1 $end
$var wire 1 s$ w2 $end
$var wire 1 t$ w3 $end
$var wire 1 u$ w4 $end
$upscope $end
$scope module f15 $end
$var wire 1 v$ a $end
$var wire 1 w$ b $end
$var wire 1 x$ c $end
$var wire 1 m" cout $end
$var wire 1 y$ s $end
$var wire 1 z$ w1 $end
$var wire 1 {$ w2 $end
$var wire 1 |$ w3 $end
$var wire 1 }$ w4 $end
$upscope $end
$scope module f2 $end
$var wire 1 ~$ a $end
$var wire 1 !% b $end
$var wire 1 G$ c $end
$var wire 1 "% cout $end
$var wire 1 #% s $end
$var wire 1 $% w1 $end
$var wire 1 %% w2 $end
$var wire 1 &% w3 $end
$var wire 1 '% w4 $end
$upscope $end
$scope module f3 $end
$var wire 1 (% a $end
$var wire 1 )% b $end
$var wire 1 "% c $end
$var wire 1 *% cout $end
$var wire 1 +% s $end
$var wire 1 ,% w1 $end
$var wire 1 -% w2 $end
$var wire 1 .% w3 $end
$var wire 1 /% w4 $end
$upscope $end
$scope module f4 $end
$var wire 1 0% a $end
$var wire 1 1% b $end
$var wire 1 *% c $end
$var wire 1 2% cout $end
$var wire 1 3% s $end
$var wire 1 4% w1 $end
$var wire 1 5% w2 $end
$var wire 1 6% w3 $end
$var wire 1 7% w4 $end
$upscope $end
$scope module f5 $end
$var wire 1 8% a $end
$var wire 1 9% b $end
$var wire 1 2% c $end
$var wire 1 :% cout $end
$var wire 1 ;% s $end
$var wire 1 <% w1 $end
$var wire 1 =% w2 $end
$var wire 1 >% w3 $end
$var wire 1 ?% w4 $end
$upscope $end
$scope module f6 $end
$var wire 1 @% a $end
$var wire 1 A% b $end
$var wire 1 :% c $end
$var wire 1 B% cout $end
$var wire 1 C% s $end
$var wire 1 D% w1 $end
$var wire 1 E% w2 $end
$var wire 1 F% w3 $end
$var wire 1 G% w4 $end
$upscope $end
$scope module f7 $end
$var wire 1 H% a $end
$var wire 1 I% b $end
$var wire 1 B% c $end
$var wire 1 J% cout $end
$var wire 1 K% s $end
$var wire 1 L% w1 $end
$var wire 1 M% w2 $end
$var wire 1 N% w3 $end
$var wire 1 O% w4 $end
$upscope $end
$scope module f8 $end
$var wire 1 P% a $end
$var wire 1 Q% b $end
$var wire 1 J% c $end
$var wire 1 R% cout $end
$var wire 1 S% s $end
$var wire 1 T% w1 $end
$var wire 1 U% w2 $end
$var wire 1 V% w3 $end
$var wire 1 W% w4 $end
$upscope $end
$scope module f9 $end
$var wire 1 X% a $end
$var wire 1 Y% b $end
$var wire 1 R% c $end
$var wire 1 U$ cout $end
$var wire 1 Z% s $end
$var wire 1 [% w1 $end
$var wire 1 \% w2 $end
$var wire 1 ]% w3 $end
$var wire 1 ^% w4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module or0 $end
$var wire 3 _% opcode [2:0] $end
$var wire 16 `% x [15:0] $end
$var wire 16 a% y [15:0] $end
$var wire 16 b% s [15:0] $end
$upscope $end
$scope module ormux $end
$var wire 16 c% funcitonin [15:0] $end
$var wire 1 d% op0 $end
$var wire 1 e% op1 $end
$var wire 1 f% op2 $end
$var wire 16 g% soutput [15:0] $end
$upscope $end
$scope module submux $end
$var wire 16 h% funcitonin [15:0] $end
$var wire 1 i% op0 $end
$var wire 1 j% op1 $end
$var wire 1 k% op2 $end
$var wire 16 l% soutput [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx111111111110 l%
1k%
1j%
1i%
bx111111111110 h%
b0 g%
0f%
0e%
0d%
b10 c%
b10 b%
b10 a%
b0 `%
b110 _%
0^%
0]%
0\%
1[%
1Z%
1Y%
0X%
0W%
0V%
0U%
1T%
1S%
0R%
1Q%
0P%
0O%
0N%
0M%
1L%
1K%
0J%
1I%
0H%
0G%
0F%
0E%
1D%
1C%
0B%
1A%
0@%
0?%
0>%
0=%
1<%
1;%
0:%
19%
08%
07%
06%
05%
14%
13%
02%
11%
00%
0/%
0.%
0-%
1,%
1+%
0*%
1)%
0(%
0'%
0&%
0%%
1$%
1#%
0"%
1!%
0~$
0}$
0|$
x{$
xz$
xy$
zx$
xw$
0v$
0u$
0t$
xs$
xr$
xq$
xp$
xo$
0n$
0m$
0l$
xk$
xj$
xi$
xh$
xg$
0f$
0e$
0d$
xc$
xb$
xa$
x`$
x_$
0^$
0]$
0\$
0[$
1Z$
1Y$
0X$
1W$
0V$
0U$
0T$
0S$
0R$
1Q$
1P$
0O$
1N$
0M$
0L$
0K$
0J$
1I$
1H$
0G$
1F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
bx111111111110 <$
bx111111111110 ;$
b0 :$
09$
08$
07$
06$
15$
14$
03$
12$
01$
00$
0/$
1.$
1-$
0,$
0+$
1*$
0)$
0($
0'$
1&$
1%$
0$$
0#$
1"$
0!$
0~#
0}#
1|#
1{#
0z#
0y#
1x#
0w#
0v#
0u#
1t#
1s#
0r#
0q#
1p#
0o#
0n#
0m#
1l#
1k#
0j#
0i#
1h#
0g#
0f#
0e#
1d#
1c#
0b#
0a#
1`#
0_#
0^#
0]#
1\#
1[#
0Z#
0Y#
1X#
0W#
xV#
0U#
1T#
xS#
zR#
0Q#
1P#
0O#
xN#
0M#
1L#
xK#
xJ#
0I#
1H#
0G#
xF#
0E#
1D#
xC#
xB#
0A#
1@#
0?#
x>#
0=#
1<#
x;#
x:#
09#
18#
07#
06#
05#
14#
13#
02#
01#
10#
0/#
0.#
0-#
0,#
1+#
1*#
0)#
0(#
1'#
0&#
0%#
0$#
0##
1"#
0!#
0~"
0}"
0|"
1{"
0z"
1y"
0x"
1w"
0v"
1u"
xt"
bx111111111110 s"
b0 r"
b1111111111111101 q"
1p"
b0 o"
b0x n"
xm"
bx111111111110 l"
bx111111111110 k"
b1111111111111101 j"
b10 i"
b0 h"
b1 g"
b0 f"
0e"
0d"
1c"
b0 b"
b0 a"
b10 `"
b0 _"
b110 ^"
b0 ]"
0\"
1["
1Z"
bx000000000000010 Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
xs
zr
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
1C
1B
0A
1@
0?
0>
0=
0<
0;
0:
09
08
07
bx000000000000010 6
b10 5
b0 4
03
bx000000000000010 2
b0 1
b0 0
b0 /
0.
b10 -
b0 ,
bx111111111110 +
bx111111111110 *
bx111111111110 )
b10 (
b0 '
b110 &
b0 %
b0 $
b10 #
b1110 "
bx111111111110 !
$end
#1000
bx111111111111 !
bx111111111111 +
bx111111111111 )
bx111111111111 l%
bx000000000000011 2
bx000000000000011 6
bx000000000000011 Y"
1:
bx111111111111 *
bx111111111111 l"
bx111111111111 <$
bx111111111111 h%
1@$
1;
1A$
b11 -
b11 b%
b11 c%
17
1=$
b1 $
b1 '
b1 4
b1 _"
b1 h"
b1 :$
b1 `%
b1 %
#2000
1X$
0Y$
1[$
1O$
1R$
0P$
1U$
0Z%
1\%
1R%
0S%
1U%
1J%
0K%
1M%
1B%
0C%
1E%
1:%
0;%
1=%
12%
03%
15%
bx000000000000 !
bx000000000000 +
1*%
0+%
1-%
bx000000000000 )
bx000000000000 l%
1"%
1{
0#%
1%%
0:
bx000000000000100 2
bx000000000000100 6
bx000000000000100 Y"
0B
1A
0@$
bx000000000000 *
bx000000000000 l"
bx000000000000 <$
bx000000000000 h%
0H$
1G$
0;
0C
1F
b10 0
b10 a"
b10 b"
0A$
0I$
1L$
b10 -
b10 b%
b10 c%
07
1?
0=$
1E$
b10 $
b10 '
b10 4
b10 _"
b10 h"
b10 :$
b10 `%
b10 %
#3000
bx000000000001 !
bx000000000001 +
bx000000000001 )
bx000000000001 l%
bx000000000000101 2
bx000000000000101 6
bx000000000000101 Y"
1:
bx000000000001 *
bx000000000001 l"
bx000000000001 <$
bx000000000001 h%
1@$
1;
1A$
b11 -
b11 b%
b11 c%
17
1=$
b11 $
b11 '
b11 4
b11 _"
b11 h"
b11 :$
b11 `%
b11 %
#4000
bx000000000010 !
bx000000000010 +
bx000000000010 )
bx000000000010 l%
0%"
0%%
0:
1B
0A
bx000000000000110 2
bx000000000000110 6
bx000000000000110 Y"
1{
0z
0@$
1H$
0G$
bx000000000010 *
bx000000000010 l"
bx000000000010 <$
bx000000000010 h%
0#%
0;
1C
0F
1|
0~
b0 0
b0 a"
b0 b"
0A$
1I$
0L$
0$%
0&%
1'%
b110 -
b110 b%
b110 c%
07
0?
1x
0=$
0E$
1~$
b100 $
b100 '
b100 4
b100 _"
b100 h"
b100 :$
b100 `%
b100 %
#5000
bx000000000011 !
bx000000000011 +
bx000000000011 )
bx000000000011 l%
bx000000000000111 2
bx000000000000111 6
bx000000000000111 Y"
1:
bx000000000011 *
bx000000000011 l"
bx000000000011 <$
bx000000000011 h%
1@$
1;
1A$
b111 -
b111 b%
b111 c%
17
1=$
b101 $
b101 '
b101 4
b101 _"
b101 h"
b101 :$
b101 `%
b101 %
#6000
bx000000000100 !
bx000000000100 +
1%"
1z
bx000000000100 )
bx000000000100 l%
0{
1~
1#%
1%%
1&%
0:
bx000000000001000 2
bx000000000001000 6
bx000000000001000 Y"
0B
1A
0@$
bx000000000100 *
bx000000000100 l"
bx000000000100 <$
bx000000000100 h%
0H$
1G$
0;
0C
1F
b10 0
b10 a"
b10 b"
0A$
0I$
1L$
b110 -
b110 b%
b110 c%
07
1?
0=$
1E$
b110 $
b110 '
b110 4
b110 _"
b110 h"
b110 :$
b110 `%
b110 %
#7000
bx000000000101 !
bx000000000101 +
bx000000000101 )
bx000000000101 l%
bx000000000001001 2
bx000000000001001 6
bx000000000001001 Y"
1:
bx000000000101 *
bx000000000101 l"
bx000000000101 <$
bx000000000101 h%
1@$
1;
1A$
b111 -
b111 b%
b111 c%
17
1=$
b111 $
b111 '
b111 4
b111 _"
b111 h"
b111 :$
b111 `%
b111 %
#8000
bx000000000110 !
bx000000000110 +
0-%
0"%
bx000000000110 )
bx000000000110 l%
0-"
0%%
0:
1B
0A
0{
0z
bx000000000001010 2
bx000000000001010 6
bx000000000001010 Y"
1%"
0$"
0@$
1H$
0G$
1#%
bx000000000110 *
bx000000000110 l"
bx000000000110 <$
bx000000000110 h%
0+%
0;
1C
0F
0|
0~
1&"
0("
b0 0
b0 a"
b0 b"
0A$
1I$
0L$
1$%
0&%
0'%
0,%
0.%
1/%
b1010 -
b1010 b%
b1010 c%
07
0?
0x
1""
0=$
0E$
0~$
1(%
b1000 $
b1000 '
b1000 4
b1000 _"
b1000 h"
b1000 :$
b1000 `%
b1000 %
#9000
bx000000000111 !
bx000000000111 +
bx000000000111 )
bx000000000111 l%
bx000000000001011 2
bx000000000001011 6
bx000000000001011 Y"
1:
bx000000000111 *
bx000000000111 l"
bx000000000111 <$
bx000000000111 h%
1@$
1;
1A$
b1011 -
b1011 b%
b1011 c%
17
1=$
b1001 $
b1001 '
b1001 4
b1001 _"
b1001 h"
b1001 :$
b1001 `%
b1001 %
#10000
bx000000001000 !
bx000000001000 +
1+%
1-%
1.%
bx000000001000 )
bx000000001000 l%
1"%
1{
0#%
1%%
0:
bx000000000001100 2
bx000000000001100 6
bx000000000001100 Y"
0B
1A
0@$
bx000000001000 *
bx000000001000 l"
bx000000001000 <$
bx000000001000 h%
0H$
1G$
0;
0C
1F
b10 0
b10 a"
b10 b"
0A$
0I$
1L$
b1010 -
b1010 b%
b1010 c%
07
1?
0=$
1E$
b1010 $
b1010 '
b1010 4
b1010 _"
b1010 h"
b1010 :$
b1010 `%
b1010 %
