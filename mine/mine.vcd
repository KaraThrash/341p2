$date
	Fri Nov  9 19:31:09 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module mine_tb $end
$var wire 1 ! c_out $end
$var wire 4 " runsum [3:0] $end
$var wire 4 # sum [3:0] $end
$var wire 4 $ bb [3:0] $end
$var wire 4 % aa [3:0] $end
$var wire 1 & E $end
$var integer 32 ' k [31:0] $end
$scope module the_circuit $end
$var wire 1 & cin $end
$var wire 1 ! cout $end
$var wire 4 ( x [3:0] $end
$var wire 4 ) y [3:0] $end
$var wire 4 * yneg [3:0] $end
$var wire 4 + s [3:0] $end
$scope module f0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 & c $end
$var wire 1 . cout $end
$var wire 1 / s $end
$var wire 1 0 w1 $end
$var wire 1 1 w2 $end
$var wire 1 2 w3 $end
$var wire 1 3 w4 $end
$upscope $end
$scope module f1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 . c $end
$var wire 1 6 cout $end
$var wire 1 7 s $end
$var wire 1 8 w1 $end
$var wire 1 9 w2 $end
$var wire 1 : w3 $end
$var wire 1 ; w4 $end
$upscope $end
$scope module f2 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 6 c $end
$var wire 1 > cout $end
$var wire 1 ? s $end
$var wire 1 @ w1 $end
$var wire 1 A w2 $end
$var wire 1 B w3 $end
$var wire 1 C w4 $end
$upscope $end
$scope module f3 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 > c $end
$var wire 1 ! cout $end
$var wire 1 F s $end
$var wire 1 G w1 $end
$var wire 1 H w2 $end
$var wire 1 I w3 $end
$var wire 1 J w4 $end
$upscope $end
$scope module negfun $end
$var wire 1 & cin $end
$var wire 1 ! cout $end
$var wire 4 K x [3:0] $end
$var wire 4 L y [3:0] $end
$var wire 4 M s [3:0] $end
$var wire 1 N one $end
$scope module f0 $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 N c $end
$var wire 1 Q cout $end
$var wire 1 R s $end
$var wire 1 S w1 $end
$var wire 1 T w2 $end
$var wire 1 U w3 $end
$var wire 1 V w4 $end
$upscope $end
$scope module f1 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Q c $end
$var wire 1 Y cout $end
$var wire 1 Z s $end
$var wire 1 [ w1 $end
$var wire 1 \ w2 $end
$var wire 1 ] w3 $end
$var wire 1 ^ w4 $end
$upscope $end
$scope module f2 $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 Y c $end
$var wire 1 a cout $end
$var wire 1 b s $end
$var wire 1 c w1 $end
$var wire 1 d w2 $end
$var wire 1 e w3 $end
$var wire 1 f w4 $end
$upscope $end
$scope module f3 $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 a c $end
$var wire 1 ! cout $end
$var wire 1 i s $end
$var wire 1 j w1 $end
$var wire 1 k w2 $end
$var wire 1 l w3 $end
$var wire 1 m w4 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0m
0l
1k
1j
0i
1h
0g
0f
0e
1d
1c
0b
1a
1`
0_
0^
0]
1\
1[
0Z
1Y
1X
0W
0V
0U
1T
1S
0R
1Q
1P
0O
1N
b0 M
b0 L
b0 K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
b0 +
b0 *
b0 )
b0 (
b0 '
0&
b0 %
b0 $
b0 #
b0 "
x!
$end
#100
1F
1G
1?
1E
0!
1@
1i
0k
17
1=
0a
b1111 "
b1111 #
b1111 +
1/
18
1b
0d
10
15
0Y
1-
1Z
0\
b1111 *
b1111 M
1R
0Q
0S
0T
0P
b1 %
b1 )
b1 L
b1 '
#200
0/
b1110 "
b1110 #
b1110 +
17
00
18
0-
15
0R
1Q
b1110 *
b1110 M
1Z
1S
1T
0[
1P
0X
b10 %
b10 )
b10 L
b10 '
#300
07
b1101 "
b1101 #
b1101 +
1/
08
10
05
1-
0Z
b1101 *
b1101 M
1R
0Q
0S
0T
0P
b11 %
b11 )
b11 L
b11 '
#400
0/
07
b1100 "
b1100 #
b1100 +
1?
00
1Y
08
1@
0-
1\
05
1=
0R
1Q
0Z
b1100 *
b1100 M
1b
1S
1T
1[
0c
1P
1X
0`
b100 %
b100 )
b100 L
b100 '
#500
0?
0@
17
0=
b1011 "
b1011 #
b1011 +
1/
18
0b
10
15
0Y
1-
1Z
0\
b1011 *
b1011 M
1R
0Q
0S
0T
0P
b101 %
b101 )
b101 L
b101 '
#600
0/
b1010 "
b1010 #
b1010 +
17
00
18
0-
15
0R
1Q
b1010 *
b1010 M
1Z
1S
1T
0[
1P
0X
b110 %
b110 )
b110 L
b110 '
#700
07
b1001 "
b1001 #
b1001 +
1/
08
10
05
1-
0Z
b1001 *
b1001 M
1R
0Q
0S
0T
0P
b111 %
b111 )
b111 L
b111 '
#800
1a
0/
1d
07
0?
b1000 "
b1000 #
b1000 +
1F
00
1Y
08
0@
1G
0-
1\
05
0=
1E
0R
1Q
0Z
0b
b1000 *
b1000 M
1i
1S
1T
1[
1c
0j
1P
1X
1`
0h
b1000 %
b1000 )
b1000 L
b1000 '
