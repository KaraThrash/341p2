$date
	Fri Nov  2 17:21:07 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module adder_tb $end
$var wire 1 ! A $end
$var wire 1 " B $end
$var wire 1 # C $end
$var wire 1 $ D $end
$var wire 1 % E $end
$var integer 32 & k [31:0] $end
$scope module the_circuit $end
$var wire 1 $ cin $end
$var wire 1 # cout $end
$var wire 4 ' s [3:0] $end
$var wire 4 ( x [3:0] $end
$var wire 4 ) y [3:0] $end
$scope module f0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 $ c $end
$var wire 1 , cout $end
$var wire 1 - s $end
$var wire 1 . w1 $end
$var wire 1 / w2 $end
$var wire 1 0 w3 $end
$var wire 1 1 w4 $end
$upscope $end
$scope module f1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 , c $end
$var wire 1 4 cout $end
$var wire 1 5 s $end
$var wire 1 6 w1 $end
$var wire 1 7 w2 $end
$var wire 1 8 w3 $end
$var wire 1 9 w4 $end
$upscope $end
$scope module f2 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 4 c $end
$var wire 1 < cout $end
$var wire 1 = s $end
$var wire 1 > w1 $end
$var wire 1 ? w2 $end
$var wire 1 @ w3 $end
$var wire 1 A w4 $end
$upscope $end
$scope module f3 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 < c $end
$var wire 1 # cout $end
$var wire 1 D s $end
$var wire 1 E w1 $end
$var wire 1 F w2 $end
$var wire 1 G w3 $end
$var wire 1 H w4 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
x.
x-
0,
0+
z*
b0 )
b0z (
b0x '
b0 &
z%
0$
0#
x"
0!
$end
#100
x5
b0xx '
x,
x0
1$
b1 &
#200
05
b0x '
0,
00
0$
x#
b10 &
#300
x5
b0xx '
x,
x0
1$
b11 &
#400
05
b0x '
0,
00
0$
0#
b100 &
#500
x5
b0xx '
x,
x0
1$
b101 &
#600
05
b0x '
0,
00
0$
x#
b110 &
#700
x5
b0xx '
x,
x0
1$
b111 &
#800
x1
00
1+
0$
0#
b1 )
1!
b1000 &
